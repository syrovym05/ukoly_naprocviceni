<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIAAoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACMAAABCAAAAKQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAA
        AGhXV1fHkpOT+bW1tf+Xl5f9UFBQwgAAAFUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AFReXl7YysrK////////////////////////////s7Oz/0BAQLoAAAArAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAgkJCSbqqqq/////////////////+Pj4//n5+f/////////////////+vr6/319ffQAAABhAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAASQUFBw97e3v///////////+7u7v+IiIj/jY2N/5GRkf9zdHT/3N3c/////////////////6ur
        q/8TExOHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAADkZGRsvw8PD////////////n5+f/RUVF/2JiYv/Nzc3/s7Oz/2dnZ/97e3v/gIGB/+3t
        7f///////////8PDxP8aGhqTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAuLi617Ozs////////////0dHS/2pqav/Hx8f/oKCg/wkJCf8AAAD/XFxc/9fX
        1//BwcH/fX19/////////////////8HBwf8MDAyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAABwcHccnJyf////////////r6+v90dHT/6+vr/7q6uv8AAAD/AAAA/wAA
        AP8AAAD/Nzc3//////+Ghob/3d3d/////////////////6CgoP8AAABMAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABl0dHTz////////////////2tra/42Njf//////mZmZ/yIi
        Iv9vb2//j5CQ/1lZWv+QkJD//////5+fn//IyMj//////////////////////2BgYOcAAAAQAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGRkZhujo6P/////////////////n5+f/kZGR////
        /////////f39////////////////////////////nZ2d/8jIyP/8/Pz/////////////////5eXl/xcX
        F4cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZmZmbg/////////////////////87O
        zv9vb2//+Pj4//////////////////////////////////////99fX3/ISEh/1lZWf//////////////
        ////////dHR07wAAABIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM6ampv//////////////
        ///FxcX/AQEB/wYGBv+3t7f/////////////////////////////////3t7e/xcXF/8AAAD/EBAQ//X1
        9f/////////////////Ozs7/AwMDXQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwNf0tLS////
        /////////////7Ozs/8AAAD/AAAA/xYWFv/v7+///////////////////////+Dg4P8WFhb/AAAA/wAA
        AP8kJCT/+/v7//////////////////z8/P82NjaiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABER
        EXXj4+P/////////////////4uLi/wMDA/8AAAD/WFhY/4WFhf/q6ur/////////////////WVla/62t
        rf9kZWX/AAAA/52dnf///////////////////////////11dXcoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAExMTduTk5P//////////////////////VFRU/wAAAP/w8PD/Z2dn/0NDQ/////////////j4
        +P8ZGRn/k5OT/z09Pf9hYWH/////////////////////////////////cHBx2AAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAADAwNi1dXV///////////////////////o6Oj/ISEh/wQEBP8AAAD/SkpK////
        /////////Pz8/ysrK/8AAAD/KCgo//r6+v////////////////////////////////9ra2vUAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEC0tLT////////////////////////////c3Nz/KCgo/wYG
        Bv/Jycn/////////////////29vb/6qqqv/x8fH//////////////////////////////////////01N
        TbkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFoODhPT/////////////////////////////
        ///29vb/3t7e////////////////////////////////////////////////////////////////////
        ///p6en/GBgYgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATU1Nwf//////////////////
        ////////////////////////////////////////////////////////////////////////////////
        /////////////56envkAAAAfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJCQlu29vb////
        ////////////////////////////////////////////////////////////////////////////////
        ///////////////////+/v7/LCws+QAAAJIAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABd7e3v0////////////////////////////////////////////////////////////////////////
        /////////////////////////////5eXl/8AAAD/AAAA/wAAALQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACAgIIDr6+v/////////////////////////////////////////////////////////
        ///////////////////////////////////f39//Dw8P/wAAAP8AAAD/AAAA/wAAAEcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAYGFhYf3/////////////////////////////////////////////
        ////////////////////////////////////////+fn5/zY2Nv8AAAD/AAAA/wAAAP8AAAD/AAAAmwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAKcAAAD/AAAA/66urv//////////////////////////////
        //////////////////////////////////////////////39/f9QUFD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1AAAA/wAAAP8AAAD/Dg4O/8/Pz///////////////
        ///////////////////////////////////////////////////39/f/T09P/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAANcAAAAAAAAAAAAAAAAAAAAAAAAAAQAAANQAAAD/AAAA/wAAAP8AAAD/FhYW/8fH
        x///////////////////////////////////////////////////////2NjY/0pKSsIAAADdAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAvQAAAAAAAAAAAAAAAAAAAAAAAAAJAAAA5wAAAP8AAAD/AAAA/wAA
        AP8AAAD/CAgI/5SUlP//////////////////////////////////////+/v7/5KSkv8bGxuNAAAAAQAA
        AHYAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAABYAAAAAAAAAAAAAAAAAAAAAAAAAAIAAADXAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAi0xMTK6UlZX+2NjY//b29v/6+vr/3Nzc/5SUlP1AQECyAAAAOQAA
        AAAAAAAAAAAADAAAAMsAAAD/AAAA/wAAAP8AAAD/AAAAlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AJIAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAjAAAAAAAAAC0HBwdrMjIykzk5OZkNDQ1yAAAALQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAJAAAADMAAAAsgAAAFUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAGwAAAOsAAAD/AAAA/wAAAP8AAAD/AAAAvAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAMgAAAMwAAAD/AAAA/wAAAMEAAAAaAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADQAAAAzAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>